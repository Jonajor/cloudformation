# Note, this is a basic use of Cloudformation with disregard for Security Group Access
# You should always update Security Group Access with your own IP Address to ensure your instances security.
#
# How to validate template
# aws cloudformation validate-template --template-body file:////path//cloudformation//Nested//ec2-infra.yml
---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
    This template deploys an AutoScaling Launch Config and Group

Parameters: 

  KeyName:
    Description: "Enter an existing EC2 KeyPair. Default is MyEC2Key"
    Type: "String"
    Default: "MyEC2Key"

# 	Value of property InstanceType must be of type String
  InstanceType: 
    Description: "Enter t2.micro or m1.small. Default is t2.micro."
    Type: "String"
    Default: "t2.micro"
    AllowedValues: 
      - "t2.micro"
      - "m1.small"

  PublicSubnetsParameter:
    Description: "Subnets to launch instances into"
    Type: "List<AWS::EC2::Subnet::Id>"

  ECSHostSecurityGroup:
    Description: "Select the Security Group to use for the EC2 hosts"
    Type: "AWS::EC2::SecurityGroup::Id"

  LoadBalancer:
    Description: "A reference to the Application Load Balancer"
    Type: "String"

  IamInstanceProfile:
    Description: "A reference to the IamInstanceProfile"
    Type: "String"

Mappings:

  RegionMap:
    eu-west-1:
      AMI: "ami-bff32ccc"
    ap-southeast-1:
      AMI: "ami-dc9339bf" # My-Default-AMI
    ap-southeast-2:
      AMI: "ami-48d38c2b"
    eu-central-1:
      AMI: "ami-bc5b48d0"
    ap-northeast-2:
      AMI: "ami-249b554a"
    ap-northeast-1:
      AMI: "ami-383c1956"
    us-east-1:
      AMI: "ami-0b33d91d"
    sa-east-1:
      AMI: "ami-6817af04"
    us-west-1:
      AMI: "ami-d5ea86b5"
    us-west-2:
      AMI: "ami-f0091d91"


Resources:

  # Auto Scaling Launch Configuration
  LaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      AssociatePublicIpAddress: "true"
      KeyName:
        Ref: "KeyName"
      ImageId:
        Fn::FindInMap:
        - "RegionMap"
        - Ref: "AWS::Region"
        - "AMI"
      InstanceType:
        Ref: "InstanceType"
      IamInstanceProfile:
        Ref: "IamInstanceProfile"
      SecurityGroups:
      - Ref: "ECSHostSecurityGroup"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum install httpd php git awslogs python-pip aws-cfn-bootstrap -y
          yum update -y
          service httpd start
          chkconfig httpd on
          echo "[plugins]
          cwlogs = cwlogs
          [default]
          region = ${AWS::Region}" > /etc/awslogs/awscli.conf
          sudo service awslogs start
          sudo chkconfig awslogs on
          echo "<html><h1>Hello Cloud Gurus!</h1></html>" > /var/www/html/index.html
          /opt/aws/bin/cfn-signal -e 0 -r 'server setup complete' "${WaitHandle}"  > /tmp/userdata.log


  # Auto Scaling Group Basic Setup
  AutoScalingGroup: 
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties: 
      MinSize: '2'
      MaxSize: '3'
      DesiredCapacity: '2'
      LaunchConfigurationName:
        Ref: "LaunchConfiguration"
      VPCZoneIdentifier:
        Ref: "PublicSubnetsParameter"
      LoadBalancerNames:
      - Ref: "LoadBalancer"
      HealthCheckGracePeriod: "300"
      HealthCheckType: "ELB"
      Tags:
      - Key: "Name"
        Value: "Webserver-AG"
        PropagateAtLaunch: 'true'

  # Auto ScalingUp Policy - Basic Setup
  WebServerScaleUpPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeInCapacity"
      AutoScalingGroupName:
        Ref: "AutoScalingGroup"
      Cooldown: '300'
      ScalingAdjustment: '1'

  # Auto ScalingDown Policy - Basic Setup
  WebServerScaleDownPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeInCapacity"
      AutoScalingGroupName:
        Ref: "AutoScalingGroup"
      Cooldown: '300'
      ScalingAdjustment: '-1'

  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  WaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref "WaitHandle"
      Timeout: '600'


Outputs:

  AutoScalingGroupID: 
    Description: "Auto Scaling Group Reference ID"
    Value: !Ref "AutoScalingGroup"

  AutoScalingUpPolicy: 
    Description: "Auto Scaling Up Policy Reference ID"
    Value: !Ref "WebServerScaleUpPolicy"

  AutoScalingDownPolicy: 
    Description: "Auto Scaling Down Policy Reference ID"
    Value: !Ref "WebServerScaleDownPolicy"



# Note, this is a basic use of Cloudformation with disregard for Security Group Access
# You should always update Security Group Access with your own IP Address to ensure your instances security.
#
# How to validate template
# aws cloudformation validate-template --template-body file:////path//cloudformation//Nested//ec2-infra.yml
---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
    This template deploys CloudWatch Setup,
    Scale-up if CPU > 80% for 5 minutes
    Scale-down if CPU < 25% for 5 minutes

Parameters: 

  AutoScalingGroup:
    Description: "A reference to the AutoScalingGroup"
    Type: "String"

  WebServerScaleUpPolicy:
    Description: "A reference to the WebServerScaleUpPolicy"
    Type: "String"

  WebServerScaleDownPolicy:
    Description: "A reference to the WebServerScaleDownPolicy"
    Type: "String"

  AppServerSG:
    Description: "A reference to the AppScalingGroup"
    Type: "String"

  AppServerUpPolicy:
    Description: "A reference to the AppServerScaleUpPolicy"
    Type: "String"

  AppServerDownPolicy:
    Description: "A reference to the AppServerScaleDownPolicy"
    Type: "String"


Resources:

  #  Web Server Alarm High Load
  CPUAlarmHigh:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Scale-up if CPU > 80% for 5 minutes"
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: '80'
      AlarmActions:
      - Ref: "WebServerScaleUpPolicy"
      Dimensions:
      - Name: "AutoScalingGroupName"
        Value:
          Ref: "AutoScalingGroup"
      ComparisonOperator: "GreaterThanThreshold"

  # Web Server Alarm Low Load
  CPUAlarmLow:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Scale-down if CPU < 25% for 5 minutes"
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: '25'
      AlarmActions:
      - Ref: "WebServerScaleDownPolicy"
      Dimensions:
      - Name: "AutoScalingGroupName"
        Value:
          Ref: "AutoScalingGroup"
      ComparisonOperator: "GreaterThanThreshold"

  #  App Server Alarm High Load
  AppCPUAlarmHigh:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Scale-up if CPU > 80% for 5 minutes"
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: '80'
      AlarmActions:
      - Ref: "AppServerUpPolicy"
      Dimensions:
      - Name: "AutoScalingGroupName"
        Value:
          Ref: "AppServerSG"
      ComparisonOperator: "GreaterThanThreshold"

  # App Server Alarm Low Load
  AppCPUAlarmLow:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Scale-down if CPU < 25% for 5 minutes"
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: '25'
      AlarmActions:
      - Ref: "AppServerDownPolicy"
      Dimensions:
      - Name: "AutoScalingGroupName"
        Value:
          Ref: "AppServerSG"
      ComparisonOperator: "GreaterThanThreshold"


Outputs:

  WebTrafficAlarmHigh: 
    Description: "CloudWatch Reference Web AlarmHigh"
    Value: !Ref "CPUAlarmHigh"

  WebTrafficAlarmLow: 
    Description: "CloudWatch Reference Web AlarmLow"
    Value: !Ref "CPUAlarmLow"

  AppTrafficAlarmHigh: 
    Description: "CloudWatch Reference App AlarmHigh"
    Value: !Ref "AppCPUAlarmHigh"

  AppTrafficAlarmLow: 
    Description: "CloudWatch Reference App AlarmLow"
    Value: !Ref "AppCPUAlarmLow"



